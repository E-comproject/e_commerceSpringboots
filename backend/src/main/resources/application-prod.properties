server.port=${PORT:8080}
server.servlet.context-path=/api

# Database Configuration for Render
# Render provides DATABASE_URL in format: postgres://user:password@host:port/database
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/ecommerce_prod}
spring.datasource.username=${DATABASE_USER:postgres}
spring.datasource.password=${DATABASE_PASSWORD:password}
spring.datasource.driver-class-name=org.postgresql.Driver

# Hikari Connection Pool
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.maximum-pool-size=10

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
# Remove explicit dialect to let Spring auto-detect it
# spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

app.jwt.secret=${JWT_SECRET}
app.jwt.expiration-ms=${JWT_EXPIRATION}

spring.web.cors.allowed-origins=${CORS_ALLOWED_ORIGINS}
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*

omise.public-key=${OMISE_PUBLIC_KEY}
omise.secret-key=${OMISE_SECRET_KEY}
omise.api-version=${OMISE_API_VERSION}

app.api.base-url=${API_BASE_URL}
app.frontend.url=${FRONTEND_URL}
app.cors.allowed-origins=${CORS_ALLOWED_ORIGINS}
