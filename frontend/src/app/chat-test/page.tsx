'use client';

import { useState } from 'react';
import { useChatStore } from '@/store/chatStore';

export default function ChatTestPage() {
  const [buyerId, setBuyerId] = useState(1);
  const [shopId, setShopId] = useState(1);
  const [orderId, setOrderId] = useState<number | undefined>(undefined);
  const [isCreating, setIsCreating] = useState(false);

  const { createOrGetRoom, setCurrentUser } = useChatStore();

  const handleCreateRoom = async () => {
    setIsCreating(true);
    try {
      const room = await createOrGetRoom(buyerId, shopId, orderId);
      alert(`‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏ä‡∏ó‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! Room ID: ${room.id}`);
      // Redirect to chat page
      window.location.href = '/chat';
    } catch (error) {
      console.error('Error creating room:', error);
      alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏ä‡∏ó');
    }
    setIsCreating(false);
  };

  return (
    <div className="min-h-screen bg-gray-50 py-8">
      <div className="max-w-2xl mx-auto">
        <div className="bg-white rounded-lg shadow p-6">
          <h1 className="text-2xl font-bold mb-6">‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏ä‡∏ó</h1>

          {/* User Role Selection */}
          <div className="mb-6">
            <label className="block text-sm font-medium mb-2">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì:</label>
            <div className="flex gap-4">
              <button
                onClick={() => setCurrentUser({ id: buyerId, role: 'BUYER' })}
                className="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600"
              >
                ‡∏ú‡∏π‡πâ‡∏ã‡∏∑‡πâ‡∏≠ ID: {buyerId}
              </button>
              <button
                onClick={() => setCurrentUser({ id: shopId, role: 'SELLER' })}
                className="px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600"
              >
                ‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢ Shop ID: {shopId}
              </button>
            </div>
          </div>

          {/* Room Creation Form */}
          <div className="space-y-4">
            <div>
              <label className="block text-sm font-medium mb-2">Buyer ID:</label>
              <input
                type="number"
                value={buyerId}
                onChange={(e) => setBuyerId(Number(e.target.value))}
                className="w-full px-3 py-2 border border-gray-300 rounded-lg"
              />
            </div>

            <div>
              <label className="block text-sm font-medium mb-2">Shop ID:</label>
              <input
                type="number"
                value={shopId}
                onChange={(e) => setShopId(Number(e.target.value))}
                className="w-full px-3 py-2 border border-gray-300 rounded-lg"
              />
            </div>

            <div>
              <label className="block text-sm font-medium mb-2">Order ID (‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö):</label>
              <input
                type="number"
                value={orderId || ''}
                onChange={(e) => setOrderId(e.target.value ? Number(e.target.value) : undefined)}
                className="w-full px-3 py-2 border border-gray-300 rounded-lg"
                placeholder="‡∏£‡∏∞‡∏ö‡∏∏‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡∏Å‡∏Å‡∏±‡∏ö‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå"
              />
            </div>

            <button
              onClick={handleCreateRoom}
              disabled={isCreating}
              className="w-full py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 disabled:bg-gray-400"
            >
              {isCreating ? '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á...' : '‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏ä‡∏ó'}
            </button>
          </div>

          {/* Quick Actions */}
          <div className="mt-8 border-t pt-6">
            <h3 className="text-lg font-semibold mb-4">‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏ä‡∏ó:</h3>
            <div className="space-y-2">
              <button
                onClick={() => {
                  setBuyerId(1);
                  setShopId(1);
                  setOrderId(undefined);
                  handleCreateRoom();
                }}
                className="w-full text-left px-4 py-2 bg-gray-100 hover:bg-gray-200 rounded"
              >
                üí¨ ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ ID:1 ‡πÅ‡∏ä‡∏ó‡∏Å‡∏±‡∏ö‡∏£‡πâ‡∏≤‡∏ô ID:1 (‡πÅ‡∏ä‡∏ó‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ)
              </button>
              <button
                onClick={() => {
                  setBuyerId(1);
                  setShopId(2);
                  setOrderId(123);
                  handleCreateRoom();
                }}
                className="w-full text-left px-4 py-2 bg-gray-100 hover:bg-gray-200 rounded"
              >
                üì¶ ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ ID:1 ‡πÅ‡∏ä‡∏ó‡∏Å‡∏±‡∏ö‡∏£‡πâ‡∏≤‡∏ô ID:2 ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå #123
              </button>
              <button
                onClick={() => {
                  setBuyerId(2);
                  setShopId(1);
                  setOrderId(456);
                  handleCreateRoom();
                }}
                className="w-full text-left px-4 py-2 bg-gray-100 hover:bg-gray-200 rounded"
              >
                üì¶ ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ ID:2 ‡πÅ‡∏ä‡∏ó‡∏Å‡∏±‡∏ö‡∏£‡πâ‡∏≤‡∏ô ID:1 ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå #456
              </button>
            </div>
          </div>

          {/* Navigation */}
          <div className="mt-6 text-center">
            <a
              href="/chat"
              className="text-blue-500 hover:text-blue-700 underline"
            >
              ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏ä‡∏ó ‚Üí
            </a>
          </div>
        </div>
      </div>
    </div>
  );
}